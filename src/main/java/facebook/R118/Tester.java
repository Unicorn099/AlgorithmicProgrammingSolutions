package facebook.R118;

public class Tester {
  public static void main(String[] args) {
    int p = 2000;
    for (int i = 2; i <= p; i += 2) {
      System.out.println(i + " " + (i + 1));
    }
    for (int i = 0; i <= p / 2; i++) {
      System.out.println("0 0");
    }
    String[] s = "1 1 2 1 3 1 4 3 4 2 1 1 1 1 3 1 2 3 4 1 1 1 1 1 3 1 2 1 4 1 4 3 1 1 1 1 2 5 1 5 1 3 1 2 1 1 1 1 1 5 2 3 1 2 1 1 1 1 3 5 2 5 1 2 1 3 1 1 1 6 1 6 3 2 1 1 1 1 1 3 1 6 1 2 1 1 1 1 1 3 2 6 1 6 1 1 1 2 1 3 7 1 7 1 1 1 3 2 1 2 1 1 7 3 1 1 3 1 1 2 1 1 7 3 7 1 3 1 1 2 1 8 1 9 8 9 2 1 1 1 1 8 1 2 8 9 1 1 1 1 1 8 1 2 1 9 1 9 8 1 1 1 1 2 10 1 10 1 8 1 2 1 1 1 1 1 10 2 8 1 2 1 1 1 1 8 10 2 10 1 2 1 8 1 1 1 11 1 11 8 2 1 1 1 1 1 8 1 11 1 2 1 1 1 1 1 8 2 11 1 11 1 1 1 2 1 8 12 1 12 1 1 1 8 2 1 2 1 1 12 8 1 1 8 1 1 2 1 1 12 8 12 1 8 1 1 2 1 1 13 1 14 13 14 1 1 2 1 1 13 1 1 13 14 1 1 2 1 2 13 1 1 1 14 1 14 13 1 2 1 1 1 15 1 15 2 13 1 1 1 1 1 2 1 15 1 13 1 1 1 1 1 2 13 15 1 15 1 1 1 13 1 2 1 16 2 16 13 1 1 1 1 2 1 13 2 16 1 1 1 1 1 2 1 13 1 16 1 16 2 1 1 1 1 13 17 1 17 1 2 1 13 1 1 1 1 1 17 13 2 1 13 1 1 1 1 2 17 13 17 1 13 1 2 1 1 18 1 19 18 19 1 1 2 1 1 18 1 1 18 19 1 1 2 1 2 18 1 1 1 19 1 19 18 1 2 1 1 1 20 1 20 2 18 1 1 1 1 1 2 1 20 1 18 1 1 1 1 1 2 18 20 1 20 1 1 1 18 1 2 1 21 2 21 18 1 1 1 1 2 1 18 2 21 1 1 1 1 1 2 1 18 1 21 1 21 2 1 1 1 1 18 22 1 22 1 2 1 18 1 1 1 1 1 22 18 2 1 18 1 1 1 1 2 22 18 22 1 18 1 2 1 1 23 1 24 1 25 24 25 23 1 1 1 1 24 1 23 24 25 1 1 1 1 1 24 1 23 1 25 1 25 24 1 1 1 1 23 26 1 26 1 24 1 23 1 1 1 1 1 26 23 24 1 23 1 1 1 1 24 26 23 26 1 23 1 24 1 1 1 27 1 27 24 23 1 1 1 1 1 24 1 27 1 23 1 1 1 1 1 24 23 27 1 27 1 1 1 23 1 24 28 1 28 1 1 1 24 23 1 23 1 1 28 24 1 1 24 1 1 23 1 1 28 24 28 1 24 1 1 23 1 29 1 30 29 30 23 1 1 1 1 29 1 23 29 30 1 1 1 1 1 29 1 23 1 30 1 30 29 1 1 1 1 23 31 1 31 1 29 1 23 1 1 1 1 1 31 23 29 1 23 1 1 1 1 29 31 23 31 1 23 1 29 1 1 1 32 1 32 29 23 1 1 1 1 1 29 1 32 1 23 1 1 1 1 1 29 23 32 1 32 1 1 1 23 1 29 33 1 33 1 1 1 29 23 1 23 1 1 33 29 1 1 29 1 1 23 1 1 33 29 33 1 29 1 1 23 1 1 34 1 35 34 35 1 1 23 1 1 34 1 1 34 35 1 1 23 1 23 34 1 1 1 35 1 35 34 1 23 1 1 1 36 1 36 23 34 1 1 1 1 1 23 1 36 1 34 1 1 1 1 1 23 34 36 1 36 1 1 1 34 1 23 1 37 23 37 34 1 1 1 1 23 1 34 23 37 1 1 1 1 1 23 1 34 1 37 1 37 23 1 1 1 1 34 38 1 38 1 23 1 34 1 1 1 1 1 38 34 23 1 34 1 1 1 1 23 38 34 38 1 34 1 23 1 1 39 1 40 39 40 1 1 23 1 1 39 1 1 39 40 1 1 23 1 23 39 1 1 1 40 1 40 39 1 23 1 1 1 41 1 41 23 39 1 1 1 1 1 23 1 41 1 39 1 1 1 1 1 23 39 41 1 41 1 1 1 39 1 23 1 42 23 42 39 1 1 1 1 23 1 39 23 42 1 1 1 1 1 23 1 39 1 42 1 42 23 1 1 1 1 39 43 1 43 1 23 1 39 1 1 1 1 1 43 39 23 1 39 1 1 1 1 23 43 39 43 1 39 1 23 1 1 1 44 1 45 1 46 45 46 44 1 1 1 1 45 1 44 45 46 1 1 1 1 1 45 1 44 1 46 1 46 45 1 1 1 1 44 47 1 47 1 45 1 44 1 1 1 1 1 47 44 45 1 44 1 1 1 1 45 47 44 47 1 44 1 45 1 1 1 48 1 48 45 44 1 1 1 1 1 45 1 48 1 44 1 1 1 1 1 45 44 48 1 48 1 1 1 44 1 45 49 1 49 1 1 1 45 44 1 44 1 1 49 45 1 1 45 1 1 44 1 1 49 45 49 1 45 1 1 44 1 50 1 51 50 51 44 1 1 1 1 50 1 44 50 51 1 1 1 1 1 50 1 44 1 51 1 51 50 1 1 1 1 44 52 1 52 1 50 1 44 1 1 1 1 1 52 44 50 1 44 1 1 1 1 50 52 44 52 1 44 1 50 1 1 1 53 1 53 50 44 1 1 1 1 1 50 1 53 1 44 1 1 1 1 1 50 44 53 1 53 1 1 1 44 1 50 54 1 54 1 1 1 50 44 1 44 1 1 54 50 1 1 50 1 1 44 1 1 54 50 54 1 50 1 1 44 1 1 55 1 56 55 56 1 1 44 1 1 55 1 1 55 56 1 1 44 1 44 55 1 1 1 56 1 56 55 1 44 1 1 1 57 1 57 44 55 1 1 1 1 1 44 1 57 1 55 1 1 1 1 1 44 55 57 1 57 1 1 1 55 1 44 1 58 44 58 55 1 1 1 1 44 1 55 44 58 1 1 1 1 1 44 1 55 1 58 1 58 44 1 1 1 1 55 59 1 59 1 44 1 55 1 1 1 1 1 59 55 44 1 55 1 1 1 1 44 59 55 59 1 55 1 44 1 1 60 1 61 60 61 1 1 44 1 1 60 1 1 60 61 1 1 44 1 44 60 1 1 1 61 1 61 60 1 44 1 1 1 62 1 62 44 60 1 1 1 1 1 44 1 62 1 60 1 1 1 1 1 44 60 62 1 62 1 1 1 60 1 44 1 63 44 63 60 1 1 1 1 44 1 60 44 63 1 1 1 1 1 44 1 60 1 63 1 63 44 1 1 1 1 60 64 1 64 1 44 1 60 1 1 1 1 1 64 60 44 1 60 1 1 1 1 44 64 60 64 1 60 1 44 1 1 65 1 66 1 67 66 67 65 1 1 1 1 66 1 65 66 67 1 1 1 1 1 66 1 65 1 67 1 67 66 1 1 1 1 65 68 1 68 1 66 1 65 1 1 1 1 1 68 65 66 1 65 1 1 1 1 66 68 65 68 1 65 1 66 1 1 1 69 1 69 66 65 1 1 1 1 1 66 1 69 1 65 1 1 1 1 1 66 65 69 1 69 1 1 1 65 1 66 70 1 70 1 1 1 66 65 1 65 1 1 70 66 1 1 66 1 1 65 1 1 70 66 70 1 66 1 1 65 1 71 1 72 71 72 65 1 1 1 1 71 1 65 71 72 1 1 1 1 1 71 1 65 1 72 1 72 71 1 1 1 1 65 73 1 73 1 71 1 65 1 1 1 1 1 73 65 71 1 65 1 1 1 1 71 73 65 73 1 65 1 71 1 1 1 74 1 74 71 65 1 1 1 1 1 71 1 74 1 65 1 1 1 1 1 71 65 74 1 74 1 1 1 65 1 71 75 1 75 1 1 1 71 65 1 65 1 1 75 71 1 1 71 1 1 65 1 1 75 71 75 1 71 1 1 65 1 76 77 76 78 77 78 1 1 65 76 76 77 76 1 77 78 76 1 65 76 65 77 76 1 1 78 76 78 77 76 65 1 76 1 79 76 79 65 77 76 1 1 76 1 65 76 79 1 77 76 1 76 76 1 65 77 79 1 79 76 1 76 77 1 65 1 80 65 80 77 1 76 1 1 65 1 77 65 80 1 1 76 1 76 65 1 77 1 80 1 80 65 1 76 1 1 77 81 1 81 76 65 1 77 1 1 1 76 1 81 77 65 1 77 1 1 1 76 65 81 77 81 1 77 1 65 1 76 1 1 2 1 2 1 1 65 1 76 1 76 1 1 2 1 1 65 1 65 1 76 1 1 2 1 2 1 1 65 1 76 1 1 3 1 1 1 65 1 76 1 1 1 1 1 76 65 1 1 1 1 76 1 1 1 65 1 1 1 1 76 65 1 1 1 1 76 1 1 1 65 1 1 1 1 76 65 1 1".split(" ");
    boolean[] flag = new boolean[82];
    flag[0]=true;
    for (int i = 1; i < s.length; i++) {
      flag[Integer.parseInt(s[i])] = true;
    }

    boolean f = true;
    for(int i=0;i<82;i++){
      f = f&& flag[i];
    }
    System.out.println(f);
  }
}
